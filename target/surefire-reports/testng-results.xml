<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-12T21:32:28 EET" name="Surefire suite" finished-at="2025-03-12T21:32:45 EET" duration-ms="16149">
    <groups>
    </groups>
    <test started-at="2025-03-12T21:32:28 EET" name="Surefire test" finished-at="2025-03-12T21:32:45 EET" duration-ms="16149">
      <class name="tests.TestReturningPetInventories">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestReturningPetInventories@75329a49]" started-at="2025-03-12T21:32:39 EET" name="setUps" finished-at="2025-03-12T21:32:39 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method signature="testGetPetInventories()[pri:1, instance:tests.TestReturningPetInventories@75329a49]" started-at="2025-03-12T21:32:39 EET" name="testGetPetInventories" finished-at="2025-03-12T21:32:39 EET" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPetInventories -->
      </class> <!-- tests.TestReturningPetInventories -->
      <class name="tests.TestGetNonExistentOrder">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestGetNonExistentOrder@6d2a209c]" started-at="2025-03-12T21:32:38 EET" name="setUps" finished-at="2025-03-12T21:32:38 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method signature="testGetOrderById()[pri:5, instance:tests.TestGetNonExistentOrder@6d2a209c]" started-at="2025-03-12T21:32:38 EET" name="testGetOrderById" finished-at="2025-03-12T21:32:39 EET" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderById -->
      </class> <!-- tests.TestGetNonExistentOrder -->
      <class name="tests.TestPlaceTheOrderAlreadyExists">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestPlaceTheOrderAlreadyExists@5e316c74]" started-at="2025-03-12T21:32:35 EET" name="setUps" finished-at="2025-03-12T21:32:35 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method is-config="true" signature="createOrder()[pri:0, instance:tests.TestPlaceTheOrderAlreadyExists@5e316c74]" started-at="2025-03-12T21:32:35 EET" name="createOrder" finished-at="2025-03-12T21:32:37 EET" duration-ms="2671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="testPlaceTheOrderWhichAlreadyExists()[pri:3, instance:tests.TestPlaceTheOrderAlreadyExists@5e316c74]" started-at="2025-03-12T21:32:37 EET" name="testPlaceTheOrderWhichAlreadyExists" finished-at="2025-03-12T21:32:38 EET" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceTheOrderWhichAlreadyExists -->
      </class> <!-- tests.TestPlaceTheOrderAlreadyExists -->
      <class name="tests.TestGetCertainOrder">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestGetCertainOrder@4313f5bc]" started-at="2025-03-12T21:32:40 EET" name="setUps" finished-at="2025-03-12T21:32:40 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method is-config="true" signature="createOrder()[pri:0, instance:tests.TestGetCertainOrder@4313f5bc]" started-at="2025-03-12T21:32:40 EET" name="createOrder" finished-at="2025-03-12T21:32:44 EET" duration-ms="3737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="testGetOrderById()[pri:4, instance:tests.TestGetCertainOrder@4313f5bc]" started-at="2025-03-12T21:32:44 EET" name="testGetOrderById" finished-at="2025-03-12T21:32:45 EET" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderById -->
      </class> <!-- tests.TestGetCertainOrder -->
      <class name="tests.TestDeletePurchaseOrder">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestDeletePurchaseOrder@6ac13091]" started-at="2025-03-12T21:32:30 EET" name="setUps" finished-at="2025-03-12T21:32:30 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method is-config="true" signature="createOrder()[pri:0, instance:tests.TestDeletePurchaseOrder@6ac13091]" started-at="2025-03-12T21:32:30 EET" name="createOrder" finished-at="2025-03-12T21:32:34 EET" duration-ms="3707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method signature="testDeletePurchasedOrderById()[pri:6, instance:tests.TestDeletePurchaseOrder@6ac13091]" started-at="2025-03-12T21:32:34 EET" name="testDeletePurchasedOrderById" finished-at="2025-03-12T21:32:35 EET" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePurchasedOrderById -->
      </class> <!-- tests.TestDeletePurchaseOrder -->
      <class name="tests.TestPlaceAnOrder">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestPlaceAnOrder@4e91d63f]" started-at="2025-03-12T21:32:28 EET" name="setUps" finished-at="2025-03-12T21:32:29 EET" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method signature="testPlaceAnOrder()[pri:2, instance:tests.TestPlaceAnOrder@4e91d63f]" started-at="2025-03-12T21:32:29 EET" name="testPlaceAnOrder" finished-at="2025-03-12T21:32:30 EET" duration-ms="1498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceAnOrder -->
      </class> <!-- tests.TestPlaceAnOrder -->
      <class name="tests.TestDeleteNotPurchaseOrder">
        <test-method is-config="true" signature="setUps()[pri:0, instance:tests.TestDeleteNotPurchaseOrder@161479c6]" started-at="2025-03-12T21:32:39 EET" name="setUps" finished-at="2025-03-12T21:32:39 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUps -->
        <test-method signature="testDeleteNotPurchasedOrderById()[pri:7, instance:tests.TestDeleteNotPurchaseOrder@161479c6]" started-at="2025-03-12T21:32:39 EET" name="testDeleteNotPurchasedOrderById" finished-at="2025-03-12T21:32:40 EET" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNotPurchasedOrderById -->
      </class> <!-- tests.TestDeleteNotPurchaseOrder -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
